---
# WinBatch V2 Test - Простой тест самодостаточного плагина
- name: "🧪 WinBatch V2 Simple Test"
  hosts: all
  gather_facts: false
  connection: winbatch_v2
  
  vars:
    ansible_connection: winbatch_v2
    ansible_winbatch_batch_size: 5
    ansible_winbatch_status_interval: 3
    ansible_shell_type: powershell
  
  tasks:
    - name: "✅ Test 1: Basic PowerShell command"
      win_shell: |
        Write-Host "WinBatch V2 Test - PowerShell working!"
        Get-Date
      register: test1_result
      
    - name: "✅ Test 2: System information"
      win_shell: |
        $info = @{
          hostname = $env:COMPUTERNAME
          os = (Get-WmiObject Win32_OperatingSystem).Caption
          uptime = (Get-Date) - (Get-WmiObject Win32_OperatingSystem).ConvertToDateTime((Get-WmiObject Win32_OperatingSystem).LastBootUpTime)
        }
        $info | ConvertTo-Json
      register: test2_result
      
    - name: "✅ Test 3: File operations"
      win_shell: |
        $testFile = "C:\winbatch_v2_test.txt"
        "WinBatch V2 Test - $(Get-Date)" | Set-Content $testFile
        if (Test-Path $testFile) {
          Write-Host "File created successfully: $testFile"
          Get-Content $testFile
        }
      register: test3_result
      
    - name: "✅ Test 4: Service check"
      win_shell: |
        $services = @('Spooler', 'Themes')
        foreach ($svc in $services) {
          $service = Get-Service -Name $svc -ErrorAction SilentlyContinue
          if ($service) {
            Write-Host "$svc : $($service.Status)"
          }
        }
      register: test4_result
      
    - name: "✅ Test 5: Network info"
      win_shell: |
        Get-NetAdapter | Where-Object {$_.Status -eq 'Up'} | Select-Object Name, Status, LinkSpeed | ConvertTo-Json
      register: test5_result
      
    - name: "🎉 Display test results"
      debug:
        msg: |
          ╔══════════════════════════════════════════════════════════════════════════════╗
          ║                    🧪 WINBATCH V2 TEST RESULTS 🧪                          ║
          ╠══════════════════════════════════════════════════════════════════════════════╣
          ║                                                                              ║
          ║  ✅ Test 1 (PowerShell): {{ 'PASSED' if test1_result.rc == 0 else 'FAILED' }}                                    ║
          ║  ✅ Test 2 (System Info): {{ 'PASSED' if test2_result.rc == 0 else 'FAILED' }}                                   ║
          ║  ✅ Test 3 (File Ops): {{ 'PASSED' if test3_result.rc == 0 else 'FAILED' }}                                      ║
          ║  ✅ Test 4 (Services): {{ 'PASSED' if test4_result.rc == 0 else 'FAILED' }}                                      ║
          ║  ✅ Test 5 (Network): {{ 'PASSED' if test5_result.rc == 0 else 'FAILED' }}                                       ║
          ║                                                                              ║
          ║  🚀 WinBatch V2 Plugin: WORKING!                                           ║
          ║  📦 No Custom EE Required: SUCCESS!                                        ║
          ║  🔧 No External Dependencies: SUCCESS!                                     ║
          ║                                                                              ║
          ╚══════════════════════════════════════════════════════════════════════════════╝
      
    - name: "🧹 Cleanup test file"
      win_shell: |
        $testFile = "C:\winbatch_v2_test.txt"
        if (Test-Path $testFile) {
          Remove-Item $testFile -Force
          Write-Host "Test file cleaned up"
        }
      ignore_errors: true 