---
- name: WinBatch V2 SSH Connection Test for Windows
  hosts: all
  gather_facts: false
  connection: winbatch_v2
  vars:
    # WinBatch V2 Settings
    ansible_winbatch_batch_size: 10
    ansible_winbatch_connection_timeout: 30
    ansible_winbatch_command_timeout: 300
    ansible_winbatch_persistent: true
    ansible_winbatch_shell_type: powershell
    
    # SSH Settings for Windows
    ansible_port: 22
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  
  tasks:
    - name: Test basic connectivity
      raw: echo "WinBatch V2 SSH connection test successful"
      register: connectivity_test
      
    - name: Display connectivity test result
      debug:
        var: connectivity_test.stdout_lines

    - name: Get system information
      raw: powershell -Command "Get-ComputerInfo | Select-Object WindowsProductName, WindowsVersion, TotalPhysicalMemory | ConvertTo-Json"
      register: system_info
      
    - name: Display system information
      debug:
        var: system_info.stdout_lines

    - name: Test PowerShell execution
      raw: powershell -Command "Get-Service | Where-Object {$_.Status -eq 'Running'} | Select-Object -First 5 | ConvertTo-Json"
      register: services_info
      
    - name: Display running services
      debug:
        var: services_info.stdout_lines

    - name: Create test directory structure
      raw: powershell -Command "New-Item -Path 'C:\temp\winbatch_test' -ItemType Directory -Force; New-Item -Path 'C:\temp\winbatch_test\subdir' -ItemType Directory -Force"
      register: dir_creation
      
    - name: Test file operations
      raw: powershell -Command "Set-Content -Path 'C:\temp\winbatch_test\test.txt' -Value 'WinBatch V2 test file content'; Get-Content 'C:\temp\winbatch_test\test.txt'"
      register: file_ops
      
    - name: Display file operations result
      debug:
        var: file_ops.stdout_lines

    - name: Get network configuration
      raw: powershell -Command "Get-NetIPAddress | Where-Object {$_.AddressFamily -eq 'IPv4' -and $_.IPAddress -ne '127.0.0.1'} | Select-Object IPAddress, InterfaceAlias | ConvertTo-Json"
      register: network_config
      
    - name: Display network configuration
      debug:
        var: network_config.stdout_lines

    - name: Test batch performance
      raw: powershell -Command "Measure-Command { 1..100 | ForEach-Object { Get-Date } } | Select-Object TotalMilliseconds"
      register: performance_test
      
    - name: Display performance test
      debug:
        var: performance_test.stdout_lines

    - name: Cleanup test files
      raw: powershell -Command "Remove-Item -Path 'C:\temp\winbatch_test' -Recurse -Force -ErrorAction SilentlyContinue"
      register: cleanup
      
    - name: Summary report
      debug:
        msg: |
          WinBatch V2 SSH Connection Plugin Test Results:
          ===============================================
          Connection: {{ connectivity_test.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          System Info: {{ system_info.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          PowerShell: {{ services_info.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          File Ops: {{ file_ops.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          Network: {{ network_config.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          Performance: {{ performance_test.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          Cleanup: {{ cleanup.rc == 0 | ternary('✓ SUCCESS', '✗ FAILED') }}
          
          Total Tasks: 7
          Success Rate: {{ ((connectivity_test.rc == 0) | int + 
                           (system_info.rc == 0) | int + 
                           (services_info.rc == 0) | int + 
                           (file_ops.rc == 0) | int + 
                           (network_config.rc == 0) | int + 
                           (performance_test.rc == 0) | int + 
                           (cleanup.rc == 0) | int) * 100 / 7 }}%
